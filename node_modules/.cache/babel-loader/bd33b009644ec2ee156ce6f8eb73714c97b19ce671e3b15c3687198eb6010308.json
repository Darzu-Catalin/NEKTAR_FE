{"ast":null,"code":"var _jsxFileName = \"/Users/liosa/Desktop/NEKTAR/FRONTEND/src/pages/BuildYourNetwork.tsx\",\n  _s = $RefreshSig$();\n// src/pages/BuildYourNetwork.tsx\nimport React, { useState, useCallback } from 'react';\n// Added alpha for glassmorphism effect\nimport { Container, Typography, Button, CircularProgress, Box, Alert,\n// Add these for the Save Dialog\nDialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from '@mui/material';\nimport { Splitter, Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport TextEditor from '../components/TextEditor';\nimport Visualization from '../components/Visualization';\nimport pako from 'pako';\nimport theme, { appleGray } from '../theme'; // Keep theme import\n\n// Helper: file -> Base64\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toBase64 = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = err => reject(err);\n});\n\n// Helper: base64 -> Blob\nconst b64toBlob = (base64, type = 'application/octet-stream') => {\n  return fetch(`data:${type};base64,${base64}`).then(res => res.blob());\n};\nconst BuildYourNetwork = () => {\n  _s();\n  const [dslContent, setDslContent] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [parsedDevices, setParsedDevices] = useState([]);\n  const [parsedLinks, setParsedLinks] = useState([]);\n\n  // NEW: State for the Save Topology dialog\n  const [openSaveDialog, setOpenSaveDialog] = useState(false);\n  const [saveTitle, setSaveTitle] = useState('');\n\n  // AntD Upload onChange handler\n  const handleFileChange = info => {\n    // Reset error on new file selection\n    setError('');\n    if (info.fileList.length > 0) {\n      // Get the most recent file object\n      const currentFile = info.fileList[info.fileList.length - 1].originFileObj;\n      if (currentFile) {\n        setFile(currentFile);\n        setFileName(currentFile.name);\n      } else {\n        // Handle case where originFileObj might be undefined (e.g., upload error)\n        setFile(null);\n        setFileName('');\n        setError('Could not read the selected file.');\n      }\n    } else {\n      // File removed\n      setFile(null);\n      setFileName('');\n    }\n  };\n\n  // Decode & convert a PK* file\n  const handleDecodeAndConvert = useCallback(async () => {\n    if (!file) return;\n    setLoading(true);\n    setError('');\n    setParsedDevices([]); // Clear previous visualization\n    setParsedLinks([]);\n    setDslContent(''); // Clear previous DSL\n\n    try {\n      // 1) Convert file -> base64\n      const base64File = await toBase64(file);\n\n      // 2) Decode route (AWS Lambda)\n      const decodeResponse = await fetch('https://1nlsyfjbcb.execute-api.eu-south-1.amazonaws.com/default/pka2xml', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          file: base64File.split(',')[1],\n          action: 'decode'\n        }) // Send only base64 part\n      });\n      if (!decodeResponse.ok) {\n        const errorText = await decodeResponse.text();\n        throw new Error(`Decode failed: ${decodeResponse.status} ${errorText || decodeResponse.statusText}`);\n      }\n      const responseText = await decodeResponse.text();\n\n      // Check if response text is valid base64 before proceeding\n      let blob;\n      try {\n        blob = await b64toBlob(responseText);\n      } catch (e) {\n        console.error(\"Failed to create blob from base64 response:\", responseText);\n        throw new Error(\"Decode service returned invalid data.\");\n      }\n      const arrayBuffer = await blob.arrayBuffer();\n      const data = pako.inflate(new Uint8Array(arrayBuffer));\n      const xmlStr = new TextDecoder('utf-8').decode(data);\n      const xmlBlob = new Blob([xmlStr], {\n        type: 'application/xml'\n      });\n\n      // 3) Convert route (Local Flask Backend)\n      const formData = new FormData();\n      formData.append('file', xmlBlob, 'input.xml');\n      const token = localStorage.getItem(\"token\");\n      const convertResponse = await fetch('http://127.0.0.1:5000/api/decode', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!convertResponse.ok) {\n        let errData;\n        try {\n          errData = await convertResponse.json();\n        } catch (e) {\n          errData = {\n            error: (await convertResponse.text()) || 'Conversion failed without specific error.'\n          };\n        }\n        throw new Error(errData.error || `Conversion failed: ${convertResponse.status}`);\n      }\n\n      // 4) Use the result JSON\n      const resultJson = await convertResponse.json();\n      if (!resultJson || !resultJson.dsl || !resultJson.react_flow) {\n        throw new Error(\"Conversion result is missing expected data (dsl or react_flow).\");\n      }\n      setDslContent(resultJson.dsl || ''); // Ensure dslContent is always a string\n\n      // Safely map nodes and edges\n      const nodes = resultJson.react_flow.nodes || [];\n      const edges = resultJson.react_flow.edges || [];\n      setParsedDevices(nodes.map(node => {\n        var _node$id, _node$data$label, _node$data, _node$data$src, _node$data2, _node$position$x, _node$position, _node$position$y, _node$position2, _node$data$type, _node$data3, _node$data$coordinate, _node$data4, _node$position$x2, _node$position3, _node$position$y2, _node$position4, _node$data$power_on, _node$data5, _node$data$interface, _node$data6;\n        return {\n          id: parseInt((_node$id = node === null || node === void 0 ? void 0 : node.id) !== null && _node$id !== void 0 ? _node$id : '0', 10),\n          name: (_node$data$label = node === null || node === void 0 ? void 0 : (_node$data = node.data) === null || _node$data === void 0 ? void 0 : _node$data.label) !== null && _node$data$label !== void 0 ? _node$data$label : 'Unknown',\n          src: (_node$data$src = node === null || node === void 0 ? void 0 : (_node$data2 = node.data) === null || _node$data2 === void 0 ? void 0 : _node$data2.src) !== null && _node$data$src !== void 0 ? _node$data$src : '',\n          // Provide default image path if needed\n          x: (_node$position$x = node === null || node === void 0 ? void 0 : (_node$position = node.position) === null || _node$position === void 0 ? void 0 : _node$position.x) !== null && _node$position$x !== void 0 ? _node$position$x : 0,\n          y: (_node$position$y = node === null || node === void 0 ? void 0 : (_node$position2 = node.position) === null || _node$position2 === void 0 ? void 0 : _node$position2.y) !== null && _node$position$y !== void 0 ? _node$position$y : 0,\n          type: (_node$data$type = node === null || node === void 0 ? void 0 : (_node$data3 = node.data) === null || _node$data3 === void 0 ? void 0 : _node$data3.type) !== null && _node$data$type !== void 0 ? _node$data$type : 'unknown',\n          coordinates: (_node$data$coordinate = node === null || node === void 0 ? void 0 : (_node$data4 = node.data) === null || _node$data4 === void 0 ? void 0 : _node$data4.coordinates) !== null && _node$data$coordinate !== void 0 ? _node$data$coordinate : `${(_node$position$x2 = node === null || node === void 0 ? void 0 : (_node$position3 = node.position) === null || _node$position3 === void 0 ? void 0 : _node$position3.x) !== null && _node$position$x2 !== void 0 ? _node$position$x2 : 0} ${(_node$position$y2 = node === null || node === void 0 ? void 0 : (_node$position4 = node.position) === null || _node$position4 === void 0 ? void 0 : _node$position4.y) !== null && _node$position$y2 !== void 0 ? _node$position$y2 : 0}`,\n          power_on: (_node$data$power_on = node === null || node === void 0 ? void 0 : (_node$data5 = node.data) === null || _node$data5 === void 0 ? void 0 : _node$data5.power_on) !== null && _node$data$power_on !== void 0 ? _node$data$power_on : false,\n          interface: (_node$data$interface = node === null || node === void 0 ? void 0 : (_node$data6 = node.data) === null || _node$data6 === void 0 ? void 0 : _node$data6.interface) !== null && _node$data$interface !== void 0 ? _node$data$interface : {\n            name: 'N/A',\n            ip: 'N/A',\n            bandwidth: 0\n          }\n        };\n      }));\n      setParsedLinks(edges.map(edge => {\n        var _edge$source, _edge$target;\n        return {\n          from: parseInt((_edge$source = edge === null || edge === void 0 ? void 0 : edge.source) !== null && _edge$source !== void 0 ? _edge$source : '0', 10),\n          to: parseInt((_edge$target = edge === null || edge === void 0 ? void 0 : edge.target) !== null && _edge$target !== void 0 ? _edge$target : '0', 10)\n        };\n      }));\n    } catch (err) {\n      console.error('Error during decode/convert:', err);\n      setError(`Error: ${err.message || String(err)}`);\n      // Clear results on error\n      setParsedDevices([]);\n      setParsedLinks([]);\n      setDslContent('');\n    } finally {\n      setLoading(false);\n    }\n  }, [file]); // Dependency: file state\n\n  // Compile DSL -> Ask BE for JSON\n  const handleCompileDsl = useCallback(async () => {\n    if (!dslContent.trim()) return;\n    setLoading(true);\n    setError('');\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch('http://127.0.0.1:5000/api/compile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          dsl: dslContent\n        })\n      });\n      if (!response.ok) {\n        const errorMsg = await response.text();\n        throw new Error(errorMsg || `Compile failed: ${response.status}`);\n      }\n      const resultJson = await response.json();\n      if (!resultJson || !resultJson.react_flow) {\n        throw new Error(\"Compile result is missing expected data (react_flow).\");\n      }\n\n      // Safely map nodes and edges\n      const nodes = resultJson.react_flow.nodes || [];\n      const edges = resultJson.react_flow.edges || [];\n      setParsedDevices(nodes.map(node => {\n        var _node$id2, _node$data$label2, _node$data7, _node$data$src2, _node$data8, _node$position$x3, _node$position5, _node$position$y3, _node$position6, _node$data$type2, _node$data9, _node$data$coordinate2, _node$data10, _node$position$x4, _node$position7, _node$position$y4, _node$position8, _node$data$power_on2, _node$data11, _node$data$interface2, _node$data12;\n        return {\n          id: parseInt((_node$id2 = node === null || node === void 0 ? void 0 : node.id) !== null && _node$id2 !== void 0 ? _node$id2 : '0', 10),\n          name: (_node$data$label2 = node === null || node === void 0 ? void 0 : (_node$data7 = node.data) === null || _node$data7 === void 0 ? void 0 : _node$data7.label) !== null && _node$data$label2 !== void 0 ? _node$data$label2 : 'Unknown',\n          src: (_node$data$src2 = node === null || node === void 0 ? void 0 : (_node$data8 = node.data) === null || _node$data8 === void 0 ? void 0 : _node$data8.src) !== null && _node$data$src2 !== void 0 ? _node$data$src2 : '',\n          x: (_node$position$x3 = node === null || node === void 0 ? void 0 : (_node$position5 = node.position) === null || _node$position5 === void 0 ? void 0 : _node$position5.x) !== null && _node$position$x3 !== void 0 ? _node$position$x3 : 0,\n          y: (_node$position$y3 = node === null || node === void 0 ? void 0 : (_node$position6 = node.position) === null || _node$position6 === void 0 ? void 0 : _node$position6.y) !== null && _node$position$y3 !== void 0 ? _node$position$y3 : 0,\n          type: (_node$data$type2 = node === null || node === void 0 ? void 0 : (_node$data9 = node.data) === null || _node$data9 === void 0 ? void 0 : _node$data9.type) !== null && _node$data$type2 !== void 0 ? _node$data$type2 : 'unknown',\n          coordinates: (_node$data$coordinate2 = node === null || node === void 0 ? void 0 : (_node$data10 = node.data) === null || _node$data10 === void 0 ? void 0 : _node$data10.coordinates) !== null && _node$data$coordinate2 !== void 0 ? _node$data$coordinate2 : `${(_node$position$x4 = node === null || node === void 0 ? void 0 : (_node$position7 = node.position) === null || _node$position7 === void 0 ? void 0 : _node$position7.x) !== null && _node$position$x4 !== void 0 ? _node$position$x4 : 0} ${(_node$position$y4 = node === null || node === void 0 ? void 0 : (_node$position8 = node.position) === null || _node$position8 === void 0 ? void 0 : _node$position8.y) !== null && _node$position$y4 !== void 0 ? _node$position$y4 : 0}`,\n          power_on: (_node$data$power_on2 = node === null || node === void 0 ? void 0 : (_node$data11 = node.data) === null || _node$data11 === void 0 ? void 0 : _node$data11.power_on) !== null && _node$data$power_on2 !== void 0 ? _node$data$power_on2 : false,\n          interface: (_node$data$interface2 = node === null || node === void 0 ? void 0 : (_node$data12 = node.data) === null || _node$data12 === void 0 ? void 0 : _node$data12.interface) !== null && _node$data$interface2 !== void 0 ? _node$data$interface2 : {\n            name: 'N/A',\n            ip: 'N/A',\n            bandwidth: 0\n          }\n        };\n      }));\n      setParsedLinks(edges.map(edge => {\n        var _edge$source2, _edge$target2;\n        return {\n          from: parseInt((_edge$source2 = edge === null || edge === void 0 ? void 0 : edge.source) !== null && _edge$source2 !== void 0 ? _edge$source2 : '0', 10),\n          to: parseInt((_edge$target2 = edge === null || edge === void 0 ? void 0 : edge.target) !== null && _edge$target2 !== void 0 ? _edge$target2 : '0', 10)\n        };\n      }));\n    } catch (err) {\n      console.error('Error compiling DSL:', err);\n      setError(`Error: ${err.message || String(err)}`);\n      // Optionally clear visualization on compile error\n      // setParsedDevices([]);\n      // setParsedLinks([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [dslContent]); // Dependency: dslContent state\n\n  // NEW: Handlers for the Save Topology dialog\n  const handleOpenSaveDialog = () => {\n    setOpenSaveDialog(true);\n    setSaveTitle(''); // Clear previous title\n  };\n  const handleCloseSaveDialog = () => {\n    setOpenSaveDialog(false);\n  };\n\n  // NEW: Function to save the current React Flow topology to the backend\n  const handleSaveTopology = useCallback(async () => {\n    if (!saveTitle.trim()) {\n      setError('A title is required to save the topology.');\n      return;\n    }\n    if (parsedDevices.length === 0 && parsedLinks.length === 0) {\n      setError('Cannot save an empty topology.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      // 1. Construct the React Flow JSON from current state\n      const reactFlowTopology = resultJson.react_flow;\n\n      // 2. Get the authentication token\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        throw new Error(\"Authentication token not found. Please log in.\");\n      }\n\n      // 3. Send the JSON to the backend's /api/snippets POST endpoint\n      const response = await fetch('http://127.0.0.1:5000/api/snippets', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          title: saveTitle,\n          content: JSON.stringify(reactFlowTopology) // Store the entire JSON object as a string\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.msg || `Failed to save topology: ${response.status}`);\n      }\n\n      // Success feedback\n      alert('Topology saved successfully!'); // You might want a more sophisticated notification (e.g., Material-UI Snackbar)\n      handleCloseSaveDialog(); // Close the dialog after successful save\n    } catch (err) {\n      console.error('Error saving topology:', err);\n      setError(`Error saving topology: ${err.message || String(err)}`);\n    } finally {\n      setLoading(false);\n    }\n  }, [saveTitle, parsedDevices, parsedLinks]); // Dependencies for useCallback\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: false,\n    disableGutters: true,\n    sx: {\n      height: '80vh',\n      // Adjust based on actual AppBar height (e.g., 64px)\n      width: '90vw',\n      display: 'flex',\n      flexDirection: 'column',\n      bgcolor: 'black',\n      borderRadius: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        padding: '12px 16px',\n        bgcolor: 'black',\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        display: 'flex',\n        alignItems: 'center',\n        gap: 2,\n        flexShrink: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        accept: \".pkt\" // Specify accepted file types\n        ,\n        beforeUpload: () => false // Prevent auto-upload, handle in onChange\n        ,\n        onChange: handleFileChange,\n        showUploadList: false,\n        maxCount: 1,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\" // Use outlined for this action\n          ,\n          startIcon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 26\n          }, this),\n          size: \"small\",\n          disabled: loading // Disable while loading\n          ,\n          children: \"Select PKT File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), fileName && !loading && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          color: 'text.secondary',\n          mr: 'auto' /* Push following elements right */\n        },\n        children: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }, this), !fileName && !loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleDecodeAndConvert,\n        disabled: !file || loading,\n        size: \"small\",\n        sx: {\n          ml: 1\n        } // Add margin if needed\n        ,\n        children: \"Decode & Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), dslContent.trim().length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\" // Keep as primary action? Or outlined?\n        ,\n        color: \"primary\",\n        onClick: handleCompileDsl,\n        disabled: loading || !dslContent.trim(),\n        size: \"small\",\n        sx: {\n          ml: 1\n        },\n        children: \"Compile DSL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\" // Choose a suitable color (e.g., 'secondary' or 'info')\n        ,\n        onClick: handleOpenSaveDialog // Opens the dialog\n        ,\n        disabled: loading || parsedDevices.length === 0 && parsedLinks.length === 0 // Disable if no topology to save\n        ,\n        size: \"small\",\n        sx: {\n          ml: 1\n        },\n        children: \"Save Topology\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20,\n        sx: {\n          ml: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 2,\n        pt: 1,\n        flexShrink: 0\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => setError(''),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflow: 'hidden',\n        borderTop: `1px solid ${theme.palette.divider}`,\n        position: 'relative' /* Needed for Splitter positioning */\n      },\n      children: /*#__PURE__*/_jsxDEV(Splitter, {\n        style: {\n          height: '100%',\n          width: '100%',\n          position: 'absolute' // Fill parent Box\n          // Example handle style (use CSS for better control)\n          // '--ant-splitter-handle-bg': appleGray[200]\n        },\n        children: [/*#__PURE__*/_jsxDEV(Splitter.Panel, {\n          defaultSize: \"40%\",\n          min: \"20%\",\n          max: \"60%\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: '100%',\n              width: '100%',\n              bgcolor: appleGray[800],\n              overflow: 'hidden',\n              borderRadius: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(TextEditor, {\n              value: dslContent,\n              onChange: setDslContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Splitter.Panel, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: '100%',\n              width: '100%',\n              bgcolor: appleGray[100],\n              overflow: 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(Visualization, {\n              devices: parsedDevices,\n              links: parsedLinks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openSaveDialog,\n      onClose: handleCloseSaveDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Save Current Topology\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Please enter a title for your React Flow topology. This will help you identify it later in your cabinet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"title\",\n          label: \"Topology Title\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: saveTitle,\n          onChange: e => setSaveTitle(e.target.value)\n          // Basic error indication if title is empty on save attempt\n          ,\n          error: !!error && error.includes('title is required'),\n          helperText: error.includes('title is required') ? error : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseSaveDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveTopology,\n          disabled: loading || !saveTitle.trim(),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildYourNetwork, \"OAe5icqB/27tbhMLYYDNH1A+n5Y=\");\n_c = BuildYourNetwork;\nexport default BuildYourNetwork;\nvar _c;\n$RefreshReg$(_c, \"BuildYourNetwork\");","map":{"version":3,"names":["React","useState","useCallback","Container","Typography","Button","CircularProgress","Box","Alert","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Splitter","Upload","UploadOutlined","TextEditor","Visualization","pako","theme","appleGray","jsxDEV","_jsxDEV","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","err","b64toBlob","base64","type","fetch","then","res","blob","BuildYourNetwork","_s","dslContent","setDslContent","loading","setLoading","error","setError","setFile","fileName","setFileName","parsedDevices","setParsedDevices","parsedLinks","setParsedLinks","openSaveDialog","setOpenSaveDialog","saveTitle","setSaveTitle","handleFileChange","info","fileList","length","currentFile","originFileObj","name","handleDecodeAndConvert","base64File","decodeResponse","method","headers","body","JSON","stringify","split","action","ok","errorText","text","Error","status","statusText","responseText","e","console","arrayBuffer","data","inflate","Uint8Array","xmlStr","TextDecoder","decode","xmlBlob","Blob","formData","FormData","append","token","localStorage","getItem","convertResponse","Authorization","errData","json","resultJson","dsl","react_flow","nodes","edges","map","node","_node$id","_node$data$label","_node$data","_node$data$src","_node$data2","_node$position$x","_node$position","_node$position$y","_node$position2","_node$data$type","_node$data3","_node$data$coordinate","_node$data4","_node$position$x2","_node$position3","_node$position$y2","_node$position4","_node$data$power_on","_node$data5","_node$data$interface","_node$data6","id","parseInt","label","src","x","position","y","coordinates","power_on","interface","ip","bandwidth","edge","_edge$source","_edge$target","from","source","to","target","message","String","handleCompileDsl","trim","response","errorMsg","_node$id2","_node$data$label2","_node$data7","_node$data$src2","_node$data8","_node$position$x3","_node$position5","_node$position$y3","_node$position6","_node$data$type2","_node$data9","_node$data$coordinate2","_node$data10","_node$position$x4","_node$position7","_node$position$y4","_node$position8","_node$data$power_on2","_node$data11","_node$data$interface2","_node$data12","_edge$source2","_edge$target2","handleOpenSaveDialog","handleCloseSaveDialog","handleSaveTopology","reactFlowTopology","title","content","errorData","msg","alert","maxWidth","disableGutters","sx","height","width","display","flexDirection","bgcolor","borderRadius","children","padding","borderBottom","palette","divider","alignItems","gap","flexShrink","accept","beforeUpload","onChange","showUploadList","maxCount","variant","startIcon","_jsxFileName","lineNumber","columnNumber","size","disabled","color","mr","flexGrow","onClick","ml","px","pt","severity","onClose","overflow","borderTop","style","Panel","defaultSize","min","max","value","devices","links","open","autoFocus","margin","fullWidth","includes","helperText","_c","$RefreshReg$"],"sources":["/Users/liosa/Desktop/NEKTAR/FRONTEND/src/pages/BuildYourNetwork.tsx"],"sourcesContent":["// src/pages/BuildYourNetwork.tsx\nimport React, { useState, useCallback } from 'react';\n// Added alpha for glassmorphism effect\nimport {\n  Container,\n  Typography,\n  Button,\n  CircularProgress,\n  Box,\n  Alert,\n  alpha,\n  // Add these for the Save Dialog\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@mui/material';\nimport { Splitter, Upload } from 'antd';\nimport type { UploadChangeParam } from 'antd/es/upload';\nimport { UploadOutlined } from '@ant-design/icons';\nimport TextEditor from '../components/TextEditor';\nimport Visualization from '../components/Visualization';\nimport pako from 'pako';\nimport { DraggableImage, Link } from '../types';\nimport theme, { appleGray } from '../theme'; // Keep theme import\n\n// Helper: file -> Base64\nconst toBase64 = (file: File): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = (err) => reject(err);\n  });\n\n// Helper: base64 -> Blob\nconst b64toBlob = (base64: string, type = 'application/octet-stream'): Promise<Blob> => {\n  return fetch(`data:${type};base64,${base64}`).then((res) => res.blob());\n};\n\nconst BuildYourNetwork: React.FC = () => {\n  const [dslContent, setDslContent] = useState<string>('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [file, setFile] = useState<File | null>(null);\n  const [fileName, setFileName] = useState<string>('');\n\n  const [parsedDevices, setParsedDevices] = useState<DraggableImage[]>([]);\n  const [parsedLinks, setParsedLinks] = useState<Link[]>([]);\n\n  // NEW: State for the Save Topology dialog\n  const [openSaveDialog, setOpenSaveDialog] = useState(false);\n  const [saveTitle, setSaveTitle] = useState('');\n\n  // AntD Upload onChange handler\n  const handleFileChange = (info: UploadChangeParam) => {\n      // Reset error on new file selection\n      setError('');\n      if (info.fileList.length > 0) {\n         // Get the most recent file object\n         const currentFile = info.fileList[info.fileList.length - 1].originFileObj as File;\n         if (currentFile) {\n            setFile(currentFile);\n            setFileName(currentFile.name);\n         } else {\n             // Handle case where originFileObj might be undefined (e.g., upload error)\n             setFile(null);\n             setFileName('');\n             setError('Could not read the selected file.');\n         }\n      } else {\n         // File removed\n         setFile(null);\n         setFileName('');\n      }\n  };\n\n    // Decode & convert a PK* file\n    const handleDecodeAndConvert = useCallback(async () => {\n        if (!file) return;\n        setLoading(true);\n        setError('');\n        setParsedDevices([]); // Clear previous visualization\n        setParsedLinks([]);\n        setDslContent(''); // Clear previous DSL\n\n        try {\n            // 1) Convert file -> base64\n            const base64File = await toBase64(file);\n\n            // 2) Decode route (AWS Lambda)\n            const decodeResponse = await fetch(\n                'https://1nlsyfjbcb.execute-api.eu-south-1.amazonaws.com/default/pka2xml',\n                {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ file: base64File.split(',')[1], action: 'decode' }), // Send only base64 part\n                }\n            );\n\n            if (!decodeResponse.ok) {\n                 const errorText = await decodeResponse.text();\n                 throw new Error(`Decode failed: ${decodeResponse.status} ${errorText || decodeResponse.statusText}`);\n            }\n\n            const responseText = await decodeResponse.text();\n\n             // Check if response text is valid base64 before proceeding\n            let blob: Blob;\n            try {\n                 blob = await b64toBlob(responseText);\n            } catch (e) {\n                console.error(\"Failed to create blob from base64 response:\", responseText);\n                throw new Error(\"Decode service returned invalid data.\");\n            }\n\n            const arrayBuffer = await blob.arrayBuffer();\n            const data = pako.inflate(new Uint8Array(arrayBuffer));\n            const xmlStr = new TextDecoder('utf-8').decode(data);\n            const xmlBlob = new Blob([xmlStr], { type: 'application/xml' });\n\n            // 3) Convert route (Local Flask Backend)\n            const formData = new FormData();\n            formData.append('file', xmlBlob, 'input.xml');\n\n            const token = localStorage.getItem(\"token\");\n\n            const convertResponse = await fetch('http://127.0.0.1:5000/api/decode', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                }\n            });\n\n            if (!convertResponse.ok) {\n                let errData;\n                try {\n                    errData = await convertResponse.json();\n                } catch (e) {\n                     errData = { error: await convertResponse.text() || 'Conversion failed without specific error.' };\n                }\n                throw new Error(errData.error || `Conversion failed: ${convertResponse.status}`);\n            }\n\n            // 4) Use the result JSON\n            const resultJson = await convertResponse.json();\n\n            if (!resultJson || !resultJson.dsl || !resultJson.react_flow) {\n                throw new Error(\"Conversion result is missing expected data (dsl or react_flow).\");\n            }\n\n            setDslContent(resultJson.dsl || ''); // Ensure dslContent is always a string\n\n            // Safely map nodes and edges\n            const nodes = resultJson.react_flow.nodes || [];\n            const edges = resultJson.react_flow.edges || [];\n\n            setParsedDevices(\n                nodes.map((node: any) => ({\n                    id: parseInt(node?.id ?? '0', 10),\n                    name: node?.data?.label ?? 'Unknown',\n                    src: node?.data?.src ?? '', // Provide default image path if needed\n                    x: node?.position?.x ?? 0,\n                    y: node?.position?.y ?? 0,\n                    type: node?.data?.type ?? 'unknown',\n                    coordinates: node?.data?.coordinates ?? `${node?.position?.x ?? 0} ${node?.position?.y ?? 0}`,\n                    power_on: node?.data?.power_on ?? false,\n                    interface: node?.data?.interface ?? { name: 'N/A', ip: 'N/A', bandwidth: 0 },\n                }))\n            );\n\n            setParsedLinks(\n                edges.map((edge: any) => ({\n                    from: parseInt(edge?.source ?? '0', 10),\n                    to: parseInt(edge?.target ?? '0', 10),\n                }))\n            );\n\n        } catch (err: any) {\n            console.error('Error during decode/convert:', err);\n            setError(`Error: ${err.message || String(err)}`);\n            // Clear results on error\n            setParsedDevices([]);\n            setParsedLinks([]);\n            setDslContent('');\n        } finally {\n            setLoading(false);\n        }\n    }, [file]); // Dependency: file state\n\n    // Compile DSL -> Ask BE for JSON\n    const handleCompileDsl = useCallback(async () => {\n        if (!dslContent.trim()) return;\n        setLoading(true);\n        setError('');\n        try {\n            const token = localStorage.getItem(\"token\");\n            const response = await fetch('http://127.0.0.1:5000/api/compile', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json',\n                  Authorization: `Bearer ${token}`,\n                 },\n                body: JSON.stringify({ dsl: dslContent }),\n            });\n\n            if (!response.ok) {\n                const errorMsg = await response.text();\n                throw new Error(errorMsg || `Compile failed: ${response.status}`);\n            }\n            const resultJson = await response.json();\n\n             if (!resultJson || !resultJson.react_flow) {\n                throw new Error(\"Compile result is missing expected data (react_flow).\");\n             }\n\n            // Safely map nodes and edges\n            const nodes = resultJson.react_flow.nodes || [];\n            const edges = resultJson.react_flow.edges || [];\n\n            setParsedDevices(\n                nodes.map((node: any) => ({\n                    id: parseInt(node?.id ?? '0', 10),\n                    name: node?.data?.label ?? 'Unknown',\n                    src: node?.data?.src ?? '',\n                    x: node?.position?.x ?? 0,\n                    y: node?.position?.y ?? 0,\n                    type: node?.data?.type ?? 'unknown',\n                    coordinates: node?.data?.coordinates ?? `${node?.position?.x ?? 0} ${node?.position?.y ?? 0}`,\n                    power_on: node?.data?.power_on ?? false,\n                    interface: node?.data?.interface ?? { name: 'N/A', ip: 'N/A', bandwidth: 0 },\n                }))\n            );\n\n            setParsedLinks(\n                edges.map((edge: any) => ({\n                    from: parseInt(edge?.source ?? '0', 10),\n                    to: parseInt(edge?.target ?? '0', 10),\n                }))\n            );\n\n        } catch (err: any) {\n            console.error('Error compiling DSL:', err);\n            setError(`Error: ${err.message || String(err)}`);\n             // Optionally clear visualization on compile error\n             // setParsedDevices([]);\n             // setParsedLinks([]);\n        } finally {\n            setLoading(false);\n        }\n    }, [dslContent]); // Dependency: dslContent state\n\n    // NEW: Handlers for the Save Topology dialog\n    const handleOpenSaveDialog = () => {\n      setOpenSaveDialog(true);\n      setSaveTitle(''); // Clear previous title\n    };\n\n    const handleCloseSaveDialog = () => {\n      setOpenSaveDialog(false);\n    };\n\n    // NEW: Function to save the current React Flow topology to the backend\n    const handleSaveTopology = useCallback(async () => {\n      if (!saveTitle.trim()) {\n        setError('A title is required to save the topology.');\n        return;\n      }\n      if (parsedDevices.length === 0 && parsedLinks.length === 0) {\n        setError('Cannot save an empty topology.');\n        return;\n      }\n\n      setLoading(true);\n      setError('');\n\n      try {\n        // 1. Construct the React Flow JSON from current state\n        const reactFlowTopology = resultJson.react_flow;\n\n        // 2. Get the authentication token\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          throw new Error(\"Authentication token not found. Please log in.\");\n        }\n\n        // 3. Send the JSON to the backend's /api/snippets POST endpoint\n        const response = await fetch('http://127.0.0.1:5000/api/snippets', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n          },\n          body: JSON.stringify({\n            title: saveTitle,\n            content: JSON.stringify(reactFlowTopology), // Store the entire JSON object as a string\n          }),\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.msg || `Failed to save topology: ${response.status}`);\n        }\n\n        // Success feedback\n        alert('Topology saved successfully!'); // You might want a more sophisticated notification (e.g., Material-UI Snackbar)\n        handleCloseSaveDialog(); // Close the dialog after successful save\n      } catch (err: any) {\n        console.error('Error saving topology:', err);\n        setError(`Error saving topology: ${err.message || String(err)}`);\n      } finally {\n        setLoading(false);\n      }\n    }, [saveTitle, parsedDevices, parsedLinks]); // Dependencies for useCallback\n\n  return (\n    <Container\n      maxWidth={false}\n      disableGutters\n      sx={{\n        height: '80vh', // Adjust based on actual AppBar height (e.g., 64px)\n        width: '90vw',\n        display: 'flex',\n        flexDirection: 'column',\n        bgcolor: 'black',\n        borderRadius: 1,\n      }}\n    >\n      {/* Header Toolbar Area */}\n      <Box\n        sx={{\n          padding: '12px 16px',\n          bgcolor: 'black',\n          borderBottom: `1px solid ${theme.palette.divider}`,\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2,\n          flexShrink: 0,\n        }}\n      >\n        <Upload\n          accept=\".pkt\" // Specify accepted file types\n          beforeUpload={() => false} // Prevent auto-upload, handle in onChange\n          onChange={handleFileChange}\n          showUploadList={false}\n          maxCount={1}\n        >\n          {/* Use MUI Button as the trigger */}\n          <Button\n              variant=\"outlined\" // Use outlined for this action\n              startIcon={<UploadOutlined />}\n              size=\"small\"\n              disabled={loading} // Disable while loading\n           >\n             Select PKT File\n          </Button>\n        </Upload>\n\n        {fileName && !loading && (\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary', mr: 'auto' /* Push following elements right */ }}>\n                {fileName}\n            </Typography>\n        )}\n         {/* Spacer to push actions to the right if no filename */}\n         {!fileName && !loading && <Box sx={{ flexGrow: 1 }}/>}\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleDecodeAndConvert}\n          disabled={!file || loading}\n          size=\"small\"\n          sx={{ ml: 1 }} // Add margin if needed\n        >\n          Decode & Convert\n        </Button>\n\n        {/* Show compile button only if there's DSL content */}\n        {dslContent.trim().length > 0 && (\n          <Button\n            variant=\"contained\" // Keep as primary action? Or outlined?\n            color=\"primary\"\n            onClick={handleCompileDsl}\n            disabled={loading || !dslContent.trim()}\n            size=\"small\"\n            sx={{ ml: 1 }}\n          >\n            Compile DSL\n          </Button>\n        )}\n\n        {/* NEW: Save Topology Button */}\n        <Button\n          variant=\"contained\"\n          color=\"secondary\" // Choose a suitable color (e.g., 'secondary' or 'info')\n          onClick={handleOpenSaveDialog} // Opens the dialog\n          disabled={loading || (parsedDevices.length === 0 && parsedLinks.length === 0)} // Disable if no topology to save\n          size=\"small\"\n          sx={{ ml: 1 }}\n        >\n          Save Topology\n        </Button>\n\n\n        {loading && <CircularProgress size={20} sx={{ ml: 2 }} />}\n      </Box>\n\n       {/* Error Alert Area */}\n       {error && (\n         <Box sx={{ px: 2, pt: 1, flexShrink: 0 }}> {/* Confine Alert */}\n            <Alert severity=\"error\" onClose={() => setError('')}>\n            {error}\n            </Alert>\n         </Box>\n       )}\n\n      {/* Splitter takes remaining space */}\n      <Box sx={{ flexGrow: 1, overflow: 'hidden', borderTop: `1px solid ${theme.palette.divider}`, position: 'relative' /* Needed for Splitter positioning */ }}>\n          {/* Check AntD Splitter documentation for best styling practices */}\n          {/* You might need CSS overrides for `.ant-splitter-handle` */}\n          <Splitter\n             style={{\n                 height: '100%',\n                 width: '100%',\n                 position: 'absolute', // Fill parent Box\n                 // Example handle style (use CSS for better control)\n                 // '--ant-splitter-handle-bg': appleGray[200]\n             }}\n          >\n             <Splitter.Panel defaultSize=\"40%\" min=\"20%\" max=\"60%\">\n                <Box sx={{ height: '100%', width: '100%', bgcolor: appleGray[800], overflow: 'hidden', borderRadius: 1 }}>\n                    <TextEditor value={dslContent} onChange={setDslContent} />\n                </Box>\n             </Splitter.Panel>\n             <Splitter.Panel>\n                <Box sx={{ height: '100%', width: '100%', bgcolor: appleGray[100], overflow: 'hidden' }}>\n                     <Visualization devices={parsedDevices} links={parsedLinks} />\n                </Box>\n             </Splitter.Panel>\n          </Splitter>\n       </Box>\n\n        {/* NEW: Material-UI Dialog for Save Topology */}\n        <Dialog open={openSaveDialog} onClose={handleCloseSaveDialog}>\n          <DialogTitle>Save Current Topology</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Please enter a title for your React Flow topology. This will help you identify it later in your cabinet.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Topology Title\"\n              type=\"text\"\n              fullWidth\n              variant=\"standard\"\n              value={saveTitle}\n              onChange={(e) => setSaveTitle(e.target.value)}\n              // Basic error indication if title is empty on save attempt\n              error={!!error && error.includes('title is required')}\n              helperText={error.includes('title is required') ? error : ''}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseSaveDialog}>Cancel</Button>\n            <Button onClick={handleSaveTopology} disabled={loading || !saveTitle.trim()}>Save</Button>\n          </DialogActions>\n        </Dialog>\n    </Container>\n  );\n};\n\nexport default BuildYourNetwork;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000/api'\n});\n\n// Automatically attach token if present\napi.interceptors.request.use(cfg => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    var _cfg$headers;\n    cfg.headers = (_cfg$headers = cfg.headers) !== null && _cfg$headers !== void 0 ? _cfg$headers : {};\n    cfg.headers.Authorization = `Bearer ${token}`;\n  }\n  return cfg;\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","cfg","token","localStorage","getItem","_cfg$headers","headers","Authorization"],"sources":["/Users/liosa/Desktop/NEKTAR/FRONTEND/src/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:5000/api',\n});\n\n// Automatically attach token if present\napi.interceptors.request.use(cfg => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    cfg.headers = cfg.headers ?? {};\n    cfg.headers.Authorization = `Bearer ${token}`;\n  }\n  return cfg;\n});\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAI;EAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IAAA,IAAAG,YAAA;IACTJ,GAAG,CAACK,OAAO,IAAAD,YAAA,GAAGJ,GAAG,CAACK,OAAO,cAAAD,YAAA,cAAAA,YAAA,GAAI,CAAC,CAAC;IAC/BJ,GAAG,CAACK,OAAO,CAACC,aAAa,GAAG,UAAUL,KAAK,EAAE;EAC/C;EACA,OAAOD,GAAG;AACZ,CAAC,CAAC;AAEF,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
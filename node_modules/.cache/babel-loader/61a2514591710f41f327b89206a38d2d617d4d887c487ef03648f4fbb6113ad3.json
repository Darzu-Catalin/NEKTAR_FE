{"ast":null,"code":"var _jsxFileName = \"/Users/liosa/Desktop/NEKTAR/FRONTEND/src/components/TextEditor.tsx\";\n// src/components/TextEditor.tsx\nimport React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport Prism from 'prismjs';\nimport '../utils/myDsl'; // Custom PrismJS language definition\nimport 'prismjs/themes/prism-tomorrow.css'; // Base Prism theme\nimport '../assets/DslStyles.css'; // DSL token color overrides\nimport { appleGray } from '../theme'; // Theme grayscale colors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextEditor = ({\n  value,\n  onChange\n}) => {\n  // Code font settings\n  const codeFontFamily = '\"SF Mono\", \"Menlo\", \"Monaco\", \"Consolas\", \"Courier New\", monospace';\n  const codeFontSize = 14; // px\n  const codeLineHeight = '1.5em'; // matches typical editor line height\n\n  // Split lines for gutter\n  const lines = value.split('\\n');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      overflow: 'auto',\n      // single scroll container\n      fontFamily: codeFontFamily,\n      fontSize: codeFontSize,\n      lineHeight: codeLineHeight\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '16px 8px',\n        textAlign: 'right',\n        userSelect: 'none',\n        color: appleGray[500],\n        flexShrink: 0\n      },\n      children: lines.map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: i + 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        value: value,\n        onValueChange: onChange,\n        highlight: code => {\n          if (Prism.languages['my-dsl']) {\n            return Prism.highlight(code, Prism.languages['my-dsl'], 'my-dsl');\n          }\n          return code;\n        },\n        padding: 16,\n        style: {\n          fontFamily: codeFontFamily,\n          fontSize: codeFontSize,\n          lineHeight: codeLineHeight,\n          color: appleGray[100],\n          background: 'none',\n          // parent Box provides background\n          border: 'none',\n          outline: 'none',\n          whiteSpace: 'pre',\n          minHeight: '100%'\n        },\n        textareaClassName: \"editor-textarea\",\n        \"aria-label\": \"DSL Code Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","Editor","Prism","appleGray","jsxDEV","_jsxDEV","TextEditor","value","onChange","codeFontFamily","codeFontSize","codeLineHeight","lines","split","style","display","height","width","overflow","fontFamily","fontSize","lineHeight","children","padding","textAlign","userSelect","color","flexShrink","map","_","i","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","onValueChange","highlight","code","languages","background","border","outline","whiteSpace","minHeight","textareaClassName","_c","$RefreshReg$"],"sources":["/Users/liosa/Desktop/NEKTAR/FRONTEND/src/components/TextEditor.tsx"],"sourcesContent":["// src/components/TextEditor.tsx\nimport React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport Prism from 'prismjs';\nimport '../utils/myDsl';                // Custom PrismJS language definition\nimport 'prismjs/themes/prism-tomorrow.css'; // Base Prism theme\nimport '../assets/DslStyles.css';       // DSL token color overrides\nimport { appleGray } from '../theme';    // Theme grayscale colors\n\ninterface TextEditorProps {\n  value: string;\n  onChange: (val: string) => void;\n}\n\nconst TextEditor: React.FC<TextEditorProps> = ({ value, onChange }) => {\n  // Code font settings\n  const codeFontFamily = '\"SF Mono\", \"Menlo\", \"Monaco\", \"Consolas\", \"Courier New\", monospace';\n  const codeFontSize = 14;            // px\n  const codeLineHeight = '1.5em';     // matches typical editor line height\n\n  // Split lines for gutter\n  const lines = value.split('\\n');\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n        overflow: 'auto',      // single scroll container\n        fontFamily: codeFontFamily,\n        fontSize: codeFontSize,\n        lineHeight: codeLineHeight,\n      }}\n    >\n      {/* Line number gutter */}\n      <div\n        style={{\n          padding: '16px 8px',\n          textAlign: 'right',\n          userSelect: 'none',\n          color: appleGray[500],\n          flexShrink: 0,\n        }}\n      >\n        {lines.map((_, i) => (\n          <div key={i}>{i + 1}</div>\n        ))}\n      </div>\n\n      {/* Editor area */}\n      <div style={{ flexGrow: 1 }}>\n        <Editor\n          value={value}\n          onValueChange={onChange}\n          highlight={(code) => {\n            if (Prism.languages['my-dsl']) {\n              return Prism.highlight(code, Prism.languages['my-dsl'], 'my-dsl');\n            }\n            return code;\n          }}\n          padding={16}\n          style={{\n            fontFamily: codeFontFamily,\n            fontSize: codeFontSize,\n            lineHeight: codeLineHeight,\n            color: appleGray[100],\n            background: 'none',    // parent Box provides background\n            border: 'none',\n            outline: 'none',\n            whiteSpace: 'pre',\n            minHeight: '100%',\n          }}\n          textareaClassName=\"editor-textarea\"\n          aria-label=\"DSL Code Editor\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TextEditor;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,gBAAgB,CAAC,CAAgB;AACxC,OAAO,mCAAmC,CAAC,CAAC;AAC5C,OAAO,yBAAyB,CAAC,CAAO;AACxC,SAASC,SAAS,QAAQ,UAAU,CAAC,CAAI;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOzC,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACrE;EACA,MAAMC,cAAc,GAAG,oEAAoE;EAC3F,MAAMC,YAAY,GAAG,EAAE,CAAC,CAAY;EACpC,MAAMC,cAAc,GAAG,OAAO,CAAC,CAAK;;EAEpC;EACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,KAAK,CAAC,IAAI,CAAC;EAE/B,oBACER,OAAA;IACES,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM;MACbC,QAAQ,EAAE,MAAM;MAAO;MACvBC,UAAU,EAAEV,cAAc;MAC1BW,QAAQ,EAAEV,YAAY;MACtBW,UAAU,EAAEV;IACd,CAAE;IAAAW,QAAA,gBAGFjB,OAAA;MACES,KAAK,EAAE;QACLS,OAAO,EAAE,UAAU;QACnBC,SAAS,EAAE,OAAO;QAClBC,UAAU,EAAE,MAAM;QAClBC,KAAK,EAAEvB,SAAS,CAAC,GAAG,CAAC;QACrBwB,UAAU,EAAE;MACd,CAAE;MAAAL,QAAA,EAEDV,KAAK,CAACgB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACdzB,OAAA;QAAAiB,QAAA,EAAcQ,CAAC,GAAG;MAAC,GAATA,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN7B,OAAA;MAAKS,KAAK,EAAE;QAAEqB,QAAQ,EAAE;MAAE,CAAE;MAAAb,QAAA,eAC1BjB,OAAA,CAACJ,MAAM;QACLM,KAAK,EAAEA,KAAM;QACb6B,aAAa,EAAE5B,QAAS;QACxB6B,SAAS,EAAGC,IAAI,IAAK;UACnB,IAAIpC,KAAK,CAACqC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC7B,OAAOrC,KAAK,CAACmC,SAAS,CAACC,IAAI,EAAEpC,KAAK,CAACqC,SAAS,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC;UACnE;UACA,OAAOD,IAAI;QACb,CAAE;QACFf,OAAO,EAAE,EAAG;QACZT,KAAK,EAAE;UACLK,UAAU,EAAEV,cAAc;UAC1BW,QAAQ,EAAEV,YAAY;UACtBW,UAAU,EAAEV,cAAc;UAC1Be,KAAK,EAAEvB,SAAS,CAAC,GAAG,CAAC;UACrBqC,UAAU,EAAE,MAAM;UAAK;UACvBC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE,KAAK;UACjBC,SAAS,EAAE;QACb,CAAE;QACFC,iBAAiB,EAAC,iBAAiB;QACnC,cAAW;MAAiB;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACY,EAAA,GAjEIxC,UAAqC;AAmE3C,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}